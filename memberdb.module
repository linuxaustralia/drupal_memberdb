<?php
/**
 * @file
 */

/**
 * Implementation of hook_menu()
 */
function memberdb_menu() {
  $items = array();
  $items['admin/settings/memberdb'] = array(
    'title' => 'MemberDB',
    'description' => 'Configure settings for the MemberDB module suite.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('memberdb_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer memberdb'),
    'file' => 'memberdb.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_perm()
 */
function memberdb_perm() {
  return array(
    'administer memberdb',
  );
}


/**
 * Implements hook_user().
 */
function memberdb_user($op, &$edit, &$account, $category = NULL) {
  global $user;

  if ($op == 'view') {
    if (is_array($account->content['summary'])) {
      $account->content['summary']['#title'] = t('Site');
      $account->content['summary']['member_for']['#title'] = t('Active for');
    }

    // Admin or looking at self
    if (user_access('administer memberdb') || $user->uid == $account->uid) {
      $account->content['memberdb'] = array(
        '#type' => 'user_profile_category',
        '#attributes' => array('class' => 'user-memberdb'),
        '#weight' => 5,
        '#title' => t('MemberDB'),
        'membership' => array(
          '#title' => t('Membership Status'),
          '#type' => 'user_profile_item',
          '#value' => memberdb_get_user_membership($account),
        ),
        'council' => array(
          '#title' => t('Council Status'),
          '#type' => 'user_profile_item',
          '#value' => memberdb_get_user_council($account),
          '#weight' => 1,
        ),
      );
    }
  }
}

/**
 * Helper - fetch memberdb membership history.
 */
function memberdb_get_user_membership($account) {
  $data = array();

  db_set_active('memberdb');
  if (!empty($account->profile_memberdb_id)) {
    $result = db_query("SELECT m.id, o.name AS org, t.type, t.description, UNIX_TIMESTAMP(om.start_date) AS start, UNIX_TIMESTAMP(om.expiry) AS expiry FROM members m LEFT JOIN org_members om ON (m.id = om.member_id) LEFT JOIN orgs o ON (o.id = om.org_id) LEFT JOIN member_types t ON (t.id = om.member_type_id) WHERE m.id = %d ORDER BY om.expiry, om.start_date DESC", $account->profile_memberdb_id);
  }
  else {
    $result = db_query("SELECT m.id, o.name AS org, t.type, t.description, UNIX_TIMESTAMP(om.start_date) AS start, UNIX_TIMESTAMP(om.expiry) AS expiry FROM members m LEFT JOIN org_members om ON (m.id = om.member_id) LEFT JOIN orgs o ON (o.id = om.org_id) LEFT JOIN member_types t ON (t.id = om.member_type_id) WHERE m.email = '%s' ORDER BY om.expiry, om.start_date DESC", $account->mail);
  }
  while ($row = db_fetch_array($result)) {
    $row['start'] = format_date($row['start'], 'small');
    $row['expiry'] = ($row['expiry'] == 0) ? t('Will not expire') : format_date($row['expiry'], 'small');
    $data[] = $row;
  }
  db_set_active();

  if (empty($data)) {
    return t('Has never applied for !site membership.', array('!site' => variable_get('site_name', '')));
  }

  $headers = array(
    t('Member ID'), t('Organisation'), t('Status'), t('Description'), t('Started'), t('Expired'),
  );
  return theme('table', $headers, $data);
}

/**
 * Helper - fetch memberdb council history.
 */
function memberdb_get_user_council($account) {
  $data = array();

  db_set_active('memberdb');
  if (!empty($account->profile_memberdb_id)) {
    $result = db_query("SELECT m.id, o.name AS org, p.title AS position, p.description, UNIX_TIMESTAMP(ph.start_datetime) AS start, UNIX_TIMESTAMP(ph.end_datetime) AS expiry FROM positions_held ph INNER JOIN members m ON (m.id = ph.member_id) LEFT JOIN orgs o ON (o.id = ph.org_id) LEFT JOIN positions p ON (p.id = ph.position_id) WHERE m.id = %d ORDER BY ph.end_datetime, ph.start_datetime DESC", $account->profile_memberdb_id);
  }
  else {
    $result = db_query("SELECT m.id, o.name AS org, p.title AS position, p.description, UNIX_TIMESTAMP(ph.start_datetime) AS start, UNIX_TIMESTAMP(ph.end_datetime) AS expiry FROM positions_held ph INNER JOIN members m ON (m.id = ph.member_id) LEFT JOIN orgs o ON (o.id = ph.org_id) LEFT JOIN positions p ON (p.id = ph.position_id) WHERE m.email = '%s' ORDER BY ph.end_datetime, ph.start_datetime DESC", $account->mail);
  }
  while ($row = db_fetch_array($result)) {
    $row['start'] = format_date($row['start'], 'small');
    $row['expiry'] = ($row['expiry'] == 0) ? t('Current') : format_date($row['expiry'], 'small');
    $data[] = $row;
  }
  db_set_active();

  if (empty($data)) {
    return t('Has never been on the council.');
  }

  $headers = array(
    t('Member ID'), t('Organisation'), t('Position'), t('Description'), t('Started'), t('Expired'),
  );
  return theme('table', $headers, $data);
}

